#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("faraway"),  pkgTest)
# set working directory
setwd("~C:/Users/camer/OneDrive/Documents/GitHub/QTM200Spring2020/problem_sets/PS5")
# load data
gamble <- (data=teengamb)
# run regression on gamble with specified predictors
model1 <- lm(gamble ~ sex + status + income + verbal, gamble)
#Problem 1a
par(mfrow=c(2,2)); plot(model1)
#Problem 1a
par(mfrow=c(1,1)); plot(model1)
#Problem 1a
par(mfrow=c(2,2)); plot(model1)
plot(model1)
plot(model1)
plot(model1)
plot(model1)
plot(model1)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("faraway"),  pkgTest)
#####################
# Problem 1
#####################
# load data
gamble <- (data=teengamb)
# run regression on gamble with specified predictors
model1 <- lm(gamble ~ sex + status + income + verbal, gamble)
plot(model1)
plot(model1)
#Problem 1b
plot(model1)
sort(rstudent(model1))
qqplot(StudentResid)
StudentResid<-sort(rstudent(model1))
qqplot(StudentResid)
plot(model1)
plot(model1)
plot(hatvalues(model1))
plot(hatvalues(model1),cex=2)
plot(hatvalues(model1))
gamble
outlierTest(model1)
outlier.test(model1)
library(car)
outlierTest(model1)
outlierTest(gamble)
model1
outlierTest(model1)
plot(hatvalues(model1),rstudent(model1),type="n")
cook<-sqrt(cooks.distance(model1))
points(hatvalues(model1),rstudent(model1),cex=10*cook/max(cook))
row.names(gamble)
identify(hatvalues(model1),rstudent(model1),row.names(gamble))
outlierTest(model1)
outlierTest(model1)
plot(hatvalues(model1))
outlierTest(model1)
plot(hatvalues(model1))
cook<-sqrt(cooks.distance(model1))
points(hatvalues(model1),rstudent(model1),cex=10*cook/max(cook))
plot(hatvalues(model1),rstudent(model1),type="n")
cook<-sqrt(cooks.distance(model1))
points(hatvalues(model1),rstudent(model1),cex=10*cook/max(cook))
